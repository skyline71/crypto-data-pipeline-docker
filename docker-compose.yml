services:
  namenode:
    image: bde2020/hadoop-namenode:2.0.0-hadoop2.7.4-java8
    container_name: namenode
    ports:
      - "50070:50070"
      - "9000:9000"
    environment:
      - CLUSTER_NAME=test
      - CORE_CONF_fs_defaultFS=hdfs://namenode:9000
    volumes:
      - namenode-data:/hadoop/dfs/name
      - /home/skyline/crypto_pipeline:/data
      - ./core-site.xml:/usr/local/hadoop/etc/hadoop/core-site.xml
    networks:
      - hadoop-net

  datanode:
    image: bde2020/hadoop-datanode:2.0.0-hadoop2.7.4-java8
    container_name: datanode
    depends_on:
      - namenode
    environment:
      - CORE_CONF_fs_defaultFS=hdfs://namenode:9000
    volumes:
      - datanode-data:/hadoop/dfs/data
      - ./core-site.xml:/usr/local/hadoop/etc/hadoop/core-site.xml
    networks:
      - hadoop-net

  mariadb:
    image: mariadb:latest
    container_name: mariadb
    ports:
      - "3306:3306"
    environment:
      - MYSQL_ROOT_PASSWORD=rootpassword
      - MYSQL_DATABASE=crypto_db
    volumes:
      - mariadb-data:/var/lib/mysql
    networks:
      - hadoop-net

  zookeeper:
    image: confluentinc/cp-zookeeper:7.3.0
    container_name: zookeeper
    ports:
      - "2181:2181"
    environment:
      - ZOOKEEPER_CLIENT_PORT=2181
      - ZOOKEEPER_TICK_TIME=2000
    networks:
      - hadoop-net

  kafka:
    image: confluentinc/cp-kafka:7.3.0
    container_name: kafka
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      - KAFKA_BROKER_ID=1
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
      - KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092
      - KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR=1
    networks:
      - hadoop-net
    command: >
      bash -c "echo 'Waiting for Zookeeper...' &&
             until nc -z zookeeper 2181; do sleep 1; done &&
             echo 'Zookeeper is up!' &&
             /etc/confluent/docker/run"

  spark-master:
    image: bitnami/spark:3.4.0
    container_name: spark-master
    ports:
      - "8080:8080"
      - "7077:7077"
    environment:
      - SPARK_MODE=master
    volumes:
      - spark-data:/opt/spark-data
      - /home/skyline/crypto_pipeline:/data
      - ~/crypto_pipeline/hive-conf/hive-site.xml:/opt/bitnami/spark/conf/hive-site.xml
    networks:
      - hadoop-net

  spark-worker:
    image: bitnami/spark:3.4.0
    container_name: spark-worker
    depends_on:
      - spark-master
    environment:
      - SPARK_MODE=worker
      - SPARK_MASTER_URL=spark://spark-master:7077
    volumes:
      - spark-data:/opt/spark-data
    networks:
      - hadoop-net

  sqoop:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: sqoop
    depends_on:
      - namenode
      - datanode
      - mariadb
      - hive-server
    environment:
      - HADOOP_HOME=/usr/local/hadoop
      - HADOOP_COMMON_HOME=/usr/local/hadoop
      - HADOOP_MAPRED_HOME=/usr/local/hadoop
      - SQOOP_HOME=/opt/sqoop
      - HIVE_HOME=/opt/hive
      - CORE_CONF_fs_defaultFS=hdfs://namenode:9000
      - HADOOP_CLASSPATH=/opt/sqoop/lib/*:/opt/hive-lib/*:/opt/hive/lib/*
      - HIVE_CONF_DIR=/opt/sqoop/conf
    volumes:
      - /home/skyline/crypto_pipeline:/data
      - ~/crypto_pipeline/hive-lib:/opt/hive-lib
      - ~/crypto_pipeline/hive-conf:/opt/sqoop/conf
    networks:
      - hadoop-net
    command: "tail -f /dev/null"

  hive-server:
    build:
      context: .
      dockerfile: Dockerfile.hive
    container_name: hive-server
    depends_on:
      - namenode
      - datanode
      - mariadb
      - hive-metastore
    ports:
      - "10000:10000"  # HiveServer2 Thrift порт
      - "10002:10002"  # Hive Metastore UI
    environment:
      - HIVE_HOME=/opt/hive
      - HADOOP_HEAPSIZE=1024
    volumes:
      - hive-data:/opt/hive/data
      - ~/crypto_pipeline/hive-conf:/opt/hive/conf
    networks:
      - hadoop-net
    command: "/opt/hive/bin/hiveserver2"

  hive-metastore:
    build:
      context: .
      dockerfile: Dockerfile.hive
    container_name: hive-metastore
    depends_on:
      - namenode
      - datanode
      - mariadb
    ports:
      - "9083:9083"  # Hive Metastore Thrift порт
    environment:
      - HIVE_HOME=/opt/hive
    volumes:
      - ~/crypto_pipeline/hive-conf:/opt/hive/conf
    networks:
      - hadoop-net
    command: "/opt/hive/bin/hive --service metastore"

  flume:
    image: bde2020/flume:latest
    container_name: flume
    depends_on:
      - kafka
    volumes:
      - ~/crypto_pipeline/flume-conf:/config
      - /home/skyline/crypto_pipeline:/data
    command: "/app/bin/flume-ng agent --name crypto-agent --conf /config/ -f /config/crypto-flume.conf"
    environment:
      - FLUME_AGENT=crypto-agent
    networks:
      - hadoop-net

  python-stream:
    build:
      context: .
      dockerfile: Dockerfile.python-stream
    container_name: python-stream
    depends_on:
      - mariadb
    volumes:
      - /home/skyline/crypto_pipeline:/home/skyline/crypto_pipeline
      - /home/skyline/crypto_pipeline/.env:/home/skyline/crypto_pipeline/.env
    networks:
      - hadoop-net
    restart: unless-stopped

  jupyter:
    build:
      context: .
      dockerfile: Dockerfile.jupyter
    container_name: jupyter
    ports:
      - "8888:8888"
    depends_on:
      - spark-master
      - hive-metastore
      - namenode
      - kafka
      - mariadb
    environment:
      - JUPYTER_ENABLE_LAB=yes
      - SPARK_MASTER=spark://spark-master:7077
      - HIVE_METASTORE_URI=thrift://hive-metastore:9083
      - HADOOP_HOME=/usr/local/hadoop
    volumes:
      - /home/skyline/crypto_pipeline/notebooks:/home/jovyan/work
      - ~/crypto_pipeline/hive-conf/hive-site.xml:/usr/local/spark/conf/hive-site.xml
      - ./core-site.xml:/usr/local/hadoop/etc/hadoop/core-site.xml
    networks:
      - hadoop-net
    command: >
      bash -c "echo 'Waiting for dependencies...' &&
             until nc -z spark-master 7077; do sleep 1; done &&
             until nc -z hive-metastore 9083; do sleep 1; done &&
             until nc -z namenode 9000; do sleep 1; done &&
             until nc -z kafka 9092; do sleep 1; done &&
             until nc -z mariadb 3306; do sleep 1; done &&
             echo 'Dependencies are up!' &&
             start-notebook.sh --NotebookApp.token='' --NotebookApp.password=''"
networks:
  hadoop-net:
    driver: bridge

volumes:
  namenode-data:
  datanode-data:
  mariadb-data:
  spark-data:
  hive-data:
